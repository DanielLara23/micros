#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_ST7735.h>

// pines para la Pantalla TFT
#define TFT_CS 15
#define TFT_RST 4
#define TFT_DC 2
#define TFT_SCLK 18
#define TFT_MOSI 23

// piness para el Sensor Ultrasónico HC-SR04
const int TRIG_PIN = 5;
const int ECHO_PIN = 19;

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_MOSI, TFT_SCLK, TFT_RST);


void setup() {
  Serial.begin(115200);

  // Configuración de los pines del sensor
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);

  // Inicialización de la pantalla TFT
  tft.initR(INITR_MINI160x80);
  tft.fillScreen(ST7735_BLACK);
  tft.setRotation(3);
}

void loop() {
  long duracion;
  float distancia_cm;

  // Generar el pulso de disparo del sensor
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  // Medir el tiempo del pulso de eco (Echo)
  duracion = pulseIn(ECHO_PIN, HIGH, 25000);

  // calcular la distancia
  distancia_cm = (duracion * 0.0343) / 2.0;

  // Mostrar datos en la pantalla tft
  tft.fillScreen(ST7735_BLACK);

  tft.setCursor(15, 20);
  tft.setTextColor(ST7735_WHITE); 
  tft.setTextSize(2);
  tft.print("Distancia:");

  tft.setCursor(30, 50);
  tft.setTextColor(ST7735_WHITE);
  tft.setTextSize(2);

  // Si la distancia está fuera de rango, muestra un mensaje
  if (distancia_cm <= 0 || distancia_cm > 400) {
    tft.setTextSize(1);
    tft.setCursor(35, 50);
    tft.print("Fuera de rango");
  } else {
    tft.print(distancia_cm, 1);
    tft.print(" cm");
  }

  Serial.print("Distancia: ");
  Serial.print(distancia_cm);
  Serial.println(" cm");

  delay(500);  // Pausa antes de la siguiente medición
}
